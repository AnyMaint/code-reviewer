--- a/src/app/services/notification.service.ts
+++ b/src/app/services/notification.service.ts
@@ -14,6 +14,7 @@ export class NotificationService {
 ) {}

 displayMessage(message: string, type: 'info' | 'warning' | 'error'): void {
-    this.snackBar.open(message, 'Close', { duration: 3000, panelClass: type });
+    const content = type === 'info' ? message as string : message;
+    this.snackBar.open(content, 'Close', { duration: 3000, panelClass: type });
 }

@@ -38,9 +40,5 @@ export class NotificationService {
   return this.messages$.asObservable();
 }

-  refreshNotifications(): void {
-    // Deprecated method - removing as part of cleanup
-    this.loadNotifications();
-  }

 loadNotifications(): void {
@@ -54,8 +52,15 @@ export class NotificationService {
     });
 }

+  handleApiError(error: any): void {
+    console.error('API Error:', error);
+    this.messages = [...this.messages, { id: Date.now(), text: error.message ?? 'Unknown error', read: false }]
+  }

 markAsRead(id: number): void {
   const index = this.messages.findIndex(m => m.id === id);
   if (index !== -1) {
+      this.messages[index].read = true;
+    }
+  }
 }